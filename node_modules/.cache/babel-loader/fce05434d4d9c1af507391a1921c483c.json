{"ast":null,"code":"// It should to be noted that this function isn't equivalent to `text-transform: capitalize`.\n//\n// A strict capitalization should uppercase the first letter of each word a the sentence.\n// We only handle the first word.\nexport function capitalize(string) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof string !== 'string') {\n      throw new Error('Material-UI: capitalize(string) expects a string argument.');\n    }\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\n\nexport function createChainedFunction() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  return funcs.reduce(function (acc, func) {\n    if (func == null) {\n      return acc;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof func !== 'function') {\n        console.error('Material-UI: invalid Argument Type, must only provide functions, undefined, or null.');\n      }\n    }\n\n    return function chainedFunction() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      acc.apply(this, args);\n      func.apply(this, args);\n    };\n  }, function () {});\n}","map":{"version":3,"sources":["C:/Users/bghx9/Desktop/my-app/node_modules/@material-ui/core/esm/utils/helpers.js"],"names":["capitalize","string","process","env","NODE_ENV","Error","charAt","toUpperCase","slice","createChainedFunction","_len","arguments","length","funcs","Array","_key","reduce","acc","func","console","error","chainedFunction","_len2","args","_key2","apply"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,SAASA,UAAT,CAAoBC,MAApB,EAA4B;AACjC,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,QAAI,OAAOH,MAAP,KAAkB,QAAtB,EAAgC;AAC9B,YAAM,IAAII,KAAJ,CAAU,4DAAV,CAAN;AACD;AACF;;AAED,SAAOJ,MAAM,CAACK,MAAP,CAAc,CAAd,EAAiBC,WAAjB,KAAiCN,MAAM,CAACO,KAAP,CAAa,CAAb,CAAxC;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,qBAAT,GAAiC;AACtC,OAAK,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,KAAK,GAAG,IAAIC,KAAJ,CAAUJ,IAAV,CAArC,EAAsDK,IAAI,GAAG,CAAlE,EAAqEA,IAAI,GAAGL,IAA5E,EAAkFK,IAAI,EAAtF,EAA0F;AACxFF,IAAAA,KAAK,CAACE,IAAD,CAAL,GAAcJ,SAAS,CAACI,IAAD,CAAvB;AACD;;AAED,SAAOF,KAAK,CAACG,MAAN,CAAa,UAAUC,GAAV,EAAeC,IAAf,EAAqB;AACvC,QAAIA,IAAI,IAAI,IAAZ,EAAkB;AAChB,aAAOD,GAAP;AACD;;AAED,QAAIf,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,UAAI,OAAOc,IAAP,KAAgB,UAApB,EAAgC;AAC9BC,QAAAA,OAAO,CAACC,KAAR,CAAc,sFAAd;AACD;AACF;;AAED,WAAO,SAASC,eAAT,GAA2B;AAChC,WAAK,IAAIC,KAAK,GAAGX,SAAS,CAACC,MAAtB,EAA8BW,IAAI,GAAG,IAAIT,KAAJ,CAAUQ,KAAV,CAArC,EAAuDE,KAAK,GAAG,CAApE,EAAuEA,KAAK,GAAGF,KAA/E,EAAsFE,KAAK,EAA3F,EAA+F;AAC7FD,QAAAA,IAAI,CAACC,KAAD,CAAJ,GAAcb,SAAS,CAACa,KAAD,CAAvB;AACD;;AAEDP,MAAAA,GAAG,CAACQ,KAAJ,CAAU,IAAV,EAAgBF,IAAhB;AACAL,MAAAA,IAAI,CAACO,KAAL,CAAW,IAAX,EAAiBF,IAAjB;AACD,KAPD;AAQD,GAnBM,EAmBJ,YAAY,CAAE,CAnBV,CAAP;AAoBD","sourcesContent":["// It should to be noted that this function isn't equivalent to `text-transform: capitalize`.\n//\n// A strict capitalization should uppercase the first letter of each word a the sentence.\n// We only handle the first word.\nexport function capitalize(string) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof string !== 'string') {\n      throw new Error('Material-UI: capitalize(string) expects a string argument.');\n    }\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\n\nexport function createChainedFunction() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  return funcs.reduce(function (acc, func) {\n    if (func == null) {\n      return acc;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof func !== 'function') {\n        console.error('Material-UI: invalid Argument Type, must only provide functions, undefined, or null.');\n      }\n    }\n\n    return function chainedFunction() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      acc.apply(this, args);\n      func.apply(this, args);\n    };\n  }, function () {});\n}"]},"metadata":{},"sourceType":"module"}